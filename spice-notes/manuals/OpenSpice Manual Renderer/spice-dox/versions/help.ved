Spice Manual Format
===================

Core Structure
--------------

The Spice Manual Format is a simple and specialized markup language for the
Spice Manual.  The markup strongly distinguishes two types of elements:
block-level and textflow-level elements.  Block-level elements are divided
into those that contain blocks and those that contain text.  Those containing
textflow elements are called paragraphs.

A document is a ____tree of block-level elements.  Paragraph blocks may only
appear at the leaves of the tree and, typically, constitute the vast bulk of
the leaves.  Within a paragraph, there is a ________sequence of textflow elements.
[In a future revision of the format the textflow elements may be organized
into a tree but, at present, a sequence suffices.]

Block-level elements that are siblings are usually rendered with a clear
vertical separation.  (The exception to this rule is floating blocks, which
are discussed further below.)  The width of block-level elements is typically
fixed but the vertical length is flexible and allowed to stretch to accomodate
the results of rendering the contained elements.  Textflow elements are
rendered in a left-to-right sequence and are wrapped onto separate lines to
meet the width limits.

Floating blocks are rendered into a separate region (with a fixed width but
allowed to stretch vertically) which then acts as an obstruction around which
the main textflow must be arranged.  A floating block is placed nearby to its
closest non-floating relation.  Exact placement of a floating block is not
possible since individual renderers are allowed considerable discretion when
rendering these type of blocks.


Markup Syntax, Styled Text and Whitespace Sensitivity
-----------------------------------------------------

From a lexical standpoint, a document is a sequence of tokens which are either
markup keywords or words.  A keyword starts with a backslash (e.g. \section)
and continues upto whitespace or another backslash.  Grammatically,
each markup keyword is associated with a markup expression.  For example, an
indented list looks like this
    \list BLOCK BLOCK ... BLOCK \endlist
The keywords are \list and \endlist and the whole thing is an expression.

The textual extent of a markup expression is indicated by whether or not
the keywords bracket the expression.  Some markup keywords are nullary (e.g.
\contents) and so are entirely local.  Outfix keywords come in opening and
closing pairs (e.g. \chapter ... \endchapter) and are used to show they
include all their intervening expressions.

Ordinary text words are bounded by whitespace or, at the end, backslashes.
More precisely one should say unescaped whitespace or unescaped backslashes
since it is possible to include both into a word if needed.  Within text words
there are reserved characters that act as style toggles.  There turn on or off
of modes such as bold, italic, underline, superscript, subscript and
fixed-font modes.  Unlike HTML there is no requirement that these style
toggles are properly nested because, logically speaking, they apply on a
character by character basis.

This means that the Spice Manual Format is almost entirely insensitive to
whitespace.  This means that increasing or decreasing (but not deleting) the
amount of white space between words separated by white spaces is harmless.
However, there is one situation that is significant - a blank line or series
of blank line.  This is covered in the next section on implied paragraphs.

Because there are quite a few special characters there is a need for a
verbatim and preformatted modes.  A verbatim mode disables almost all
special meanings for characters and a preformatted mode goes even further
and incorporates whitespace into words so that ASCII-art can be easily
included.


Implied Markup
--------------

In order to reduce the amount of explicit markup required there are
situations where markup is implied.  At present the principal situation
is that of implied paragraphs (e.g. \para TEXTFLOW \endpara).

Within a non-paragraph block-level element we do not expect textflow since it
is not permitted by the core structure.  Thus an "unexpected" textflow element
implicitly creates a start-of-paragraph (\para).  The end-of-paragraph
(\endpara) is implied by either the matching end-of-block marker or,
importantly, by a blank line (i.e. two successive newline characters).

In special contexts a different type of paragraph from \para may be implied.
For example, immediately after \chapter an unexpected textflow would give rise
to \title rather than \para.  Another example is \list giving rise to \item.

The rule that a blank line terminates an implied paragraph means that the
Spice Manual Format is not insenstive to whitespace.  (Whitespace
insensitivity means that whitespace can be increased or decreased, although
not deleted, without a change of meaning.)

There is, at present, one further situation where markup is implied.  This is
implied \item in a \list or a \table.


Summary
-------

BLOCK ::=
    PARAGRAPH
    SECTION
    \allsyntax
    \contents
    \indented BLOCK* \endindented
    \list ( \item BLOCK* )* \endlist
    \table ( \row ( \item BLOCK* )* )* \endtable
    \table ( \col ( \item BLOCK* )* )* \endtable
    \{ BLOCK* \}

PARAGRAPH ::=
    \( WORD* \)
    \para WORD* \endpara
    \syntax WORD* \endsyntax

SECTION ::=
    \part TITLE BODY \endpart
    \chapter TITLE BODY \endchapter
    \appendix TITLE BODY \endappendix
    \section TITLE BODY \endsection
    \passage TITLE BODY \endpassage
    \fragment TITLE BODY \endfragment

BODY ::= \body BLOCK* \endbody

TITLE ::= \title WORD* \endtitle


Style
-----
\$
_abc_
^abc^
*abc*
~abc~
|abc|
!x

Mode
----
\$


Credits
-------

The Spice Manual Format and Renderer was originally designed and implemented
in Pepper by Chris Dollin about 1999 in order to write the Spice Tutorial and
Reference Guide.  Chris adapted the code from some previous work targeting
HTML and the output format was retargeted to LaTeX.

The Renderer was written in Pop11, extended and documented by Steve Leach in
the summer of 2002.  This work added XML, XHTML, and HTML (again) as output
targets.  The Manual Format was formalized, in this document, and the implied
markup rules defined.
